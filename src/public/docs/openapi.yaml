openapi: 3.0.3
info:
  title: quizDev
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://quizdev.test'
paths:
  /api/v1/test:
    get:
      summary: ''
      operationId: getApiV1Test
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "tu es connecté à l'api quiz dev"
      tags:
        - Endpoints
      security: []
  /api/v1/auth/register:
    post:
      summary: ''
      operationId: postApiV1AuthRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lastname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tpahysxtlw
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wfpyzn
                password:
                  type: string
                  description: ''
                  example: non
                role_id:
                  type: string
                  description: ''
                  example: '3'
                  enum:
                    - '2'
                    - '3'
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: melody.zieme@example.org
              required:
                - lastname
                - name
                - password
                - role_id
                - email
      security: []
  /api/v1/auth/login:
    post:
      summary: ''
      operationId: postApiV1AuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: imann@example.org
                password:
                  type: string
                  description: ''
                  example: hic
              required:
                - email
                - password
      security: []
  /api/v1/profil:
    get:
      summary: ''
      operationId: getApiV1Profil
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/update/profil:
    put:
      summary: ''
      operationId: putApiV1UpdateProfil
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ward.eve@example.com
                name:
                  type: string
                  description: ''
                  example: sapiente
                lastname:
                  type: string
                  description: ''
                  example: quisquam
              required:
                - email
                - name
                - lastname
      security: []
tags:
  -
    name: Endpoints
    description: ''
