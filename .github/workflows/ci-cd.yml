name: CI/CD Workflow

env:
  JMETER_DOWNLOAD_URL: "https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.5.tgz"

on:
  push:
    branches:
      - develop

jobs:
  php-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'  # Specify the PHP version you need

      - name: Install Composer dependencies
        run: |
            cd src
            composer install --prefer-dist --no-progress

      - name: Set up .env file
        run: |
            cd src
            cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run database migrations
        run: php artisan migrate --env=testing --no-interaction

      - name: Install Passport
        run: php artisan passport:install --no-interaction

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --testdox

#   unit-tests:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '16'

#       - name: Install dependencies
#         run: npm ci

#       - name: Run unit tests
#         run: npm test

  performance:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Downloading Apache JMeter
        run: wget -qO- $JMETER_DOWNLOAD_URL | tar xvz -C /tmp
      
      - name: Verify JMX file
        run: ls -l jmeter-scripts/performance-test.jmx
      
      - name: Running JMeter performance tests
        run: /tmp/apache-jmeter-5.5/bin/jmeter -n -t jmeter-scripts/performance-test.jmx -l results.jtl -j jmeter.log || (cat jmeter.log && exit 1)

      - name: Upload JMeter results
        uses: actions/upload-artifact@v2
        with:
          name: jmeter-results
          path: results.jtl

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
